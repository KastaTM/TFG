{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\updates\\\\UpdatePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport UserService from '../../services/UserService';\n\n// Componente que permite actualizas los datos sobre una contraseña\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [id, setId] = useState(params.id);\n  const [password, setPassword] = useState('');\n  const [repeatedPassword, setRepeatedPassword] = useState('');\n  let isWrong = false;\n\n  // Aqui se empiezan a definir las funciones del componente\n\n  //Función para actualizar una contraseña\n  const UpdateUser = event => {\n    event.preventDefault();\n    let user = {\n      password: password\n    };\n    checkFormValues();\n    if (!isWrong) {\n      UserService.updatePassword(user, id).then(() => {\n        //Aqui tengo que cerrar la sesion\n        localStorage.removeItem('token');\n        setId('');\n        history.push('/');\n      });\n    }\n  };\n\n  // Comprueba que los valores sean validos\n  const checkFormValues = () => {\n    console.log(password);\n    console.log(repeatedPassword);\n    if (password === '') {\n      alert('La contraseña no puede ser vacía');\n      isWrong = true;\n    } else if (repeatedPassword === '') {\n      alert('Por favor escribe la contraseña repetida');\n      isWrong = true;\n    } else if (password !== repeatedPassword) {\n      alert('Las dos contraseñas no coinciden');\n      isWrong = true;\n    }\n  };\n\n  // Maneja el cambio de contraseña en el formulario\n  const changePasswordHandler = event => {\n    setPassword(event.target.value);\n  };\n\n  // Maneja el cambio de contraseña repetida en el formulario\n  const changeRepeatedPasswordHandler = event => {\n    setRepeatedPassword(event.target.value);\n  };\n\n  // Maneja la cancelación del formulario\n  const cancelForm = () => cancel();\n  const cancel = () => {\n    history.push(`/view-user/${id}`);\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push(`/view-user/${id}`);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"Modificar Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => UpdateUser(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Nueva contrase\\xF1a: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Inserte nueva contrase\\xF1a\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  value: password,\n                  onChange: event => changePasswordHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Inserte de nuevo la contrase\\xF1a: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Inserte de nuevo la contrase\\xF1a\",\n                  name: \"repeatedPassword\",\n                  className: \"form-control\",\n                  value: repeatedPassword,\n                  onChange: event => changeRepeatedPasswordHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: cancelForm,\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePassword, \"AtyEFIvRysXCq74bleidqUkzpA4=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdatePassword;\nexport default _c2 = /*#__PURE__*/React.memo(UpdatePassword);\nvar _c, _c2;\n$RefreshReg$(_c, \"UpdatePassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","UserService","UpdatePassword","params","history","id","setId","password","setPassword","repeatedPassword","setRepeatedPassword","isWrong","UpdateUser","event","preventDefault","user","checkFormValues","updatePassword","then","localStorage","removeItem","push","console","log","alert","changePasswordHandler","target","value","changeRepeatedPasswordHandler","cancelForm","cancel","window","onpopstate","marginLeft","memo"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/updates/UpdatePassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport UserService from '../../services/UserService';\r\n\r\n// Componente que permite actualizas los datos sobre una contraseña\r\n\r\nconst UpdatePassword = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [id, setId] = useState(params.id);\r\n    const [password, setPassword] = useState('');\r\n    const [repeatedPassword, setRepeatedPassword] = useState('');\r\n    let isWrong = false;\r\n\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n\r\n    //Función para actualizar una contraseña\r\n    const UpdateUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        let user = { password: password };\r\n        checkFormValues();\r\n\r\n        if (!isWrong) {\r\n            UserService.updatePassword(user, id).then(() => {\r\n                //Aqui tengo que cerrar la sesion\r\n                localStorage.removeItem('token');\r\n                setId('')\r\n                history.push('/');\r\n            });\r\n        }\r\n    }\r\n\r\n    // Comprueba que los valores sean validos\r\n    const checkFormValues = () => {\r\n        console.log(password);\r\n        console.log(repeatedPassword);\r\n        if (password === '') {\r\n            alert('La contraseña no puede ser vacía');\r\n            isWrong = true;\r\n        }\r\n        else if (repeatedPassword === '') {\r\n            alert('Por favor escribe la contraseña repetida');\r\n            isWrong = true;\r\n        }\r\n        else if (password !== repeatedPassword) {\r\n            alert('Las dos contraseñas no coinciden');\r\n            isWrong = true;\r\n        }\r\n    }\r\n\r\n    // Maneja el cambio de contraseña en el formulario\r\n    const changePasswordHandler = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    // Maneja el cambio de contraseña repetida en el formulario\r\n    const changeRepeatedPasswordHandler = (event) => {\r\n        setRepeatedPassword(event.target.value);\r\n    }\r\n\r\n    // Maneja la cancelación del formulario\r\n    const cancelForm = () => cancel()\r\n\r\n    const cancel = () => {\r\n        history.push(`/view-user/${id}`);\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push(`/view-user/${id}`);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                    <h3 className=\"text-center\">Modificar Usuario</h3>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => UpdateUser(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nueva contraseña: </label>\r\n                                    <input placeholder=\"Inserte nueva contraseña\" name=\"password\" className=\"form-control\" value={password} onChange={(event) => changePasswordHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label> Inserte de nuevo la contraseña: </label>\r\n                                    <input placeholder=\"Inserte de nuevo la contraseña\" name=\"repeatedPassword\" className=\"form-control\" value={repeatedPassword} onChange={(event) => changeRepeatedPasswordHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={cancelForm} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(UpdatePassword);"],"mappings":"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"},"metadata":{},"sourceType":"module"}