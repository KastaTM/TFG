{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\UpdateRecord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport RecordService from '../services/RecordService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateRecord = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n  const idDoctor = localStorage.getItem('token');\n\n  // // Aqui se empiezan a definir las variables de estado\n  const [idP] = useState(params.idPatient);\n  const [idR] = useState(params.idRecord);\n  const [dateRecord, setDateRecord] = useState('');\n\n  // Aqui se empiezan a definir las funciones del componente\n  const updateRecord = event => {\n    event.preventDefault();\n    let record = {\n      idRecord: idR,\n      idPatient: idP,\n      dateRecord: dateRecord\n    };\n    console.log('record => ' + JSON.stringify(record));\n    checkFormValues(record);\n    RecordService.updateRecord(idR, record).then(() => {\n      history.push(`/list-records/${idDoctor}/${idP}`);\n    });\n  };\n  const checkFormValues = record => {\n    if (record.dateRecord === '') {\n      alert('La fecha no puede estar vacía');\n      history.push(`/update-record/${idP}/${idR}`);\n    }\n  };\n  const changeDateHandler = event => {\n    setDateRecord(event.target.value);\n  };\n  const cancel = () => {\n    history.push(`/list-records/${idDoctor}/${idP}`);\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push(`/list-records/${idDoctor}/${idP}`);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"Modificar Registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => updateRecord(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Fecha: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  placeholder: \"Fecha\",\n                  name: \"dateRecord\",\n                  className: \"form-control\",\n                  value: dateRecord,\n                  onChange: event => changeDateHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: () => cancel(),\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateRecord, \"h//sCohXBJhF3Si0T7fjd9JM9lU=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdateRecord;\nexport default UpdateRecord;\nvar _c;\n$RefreshReg$(_c, \"UpdateRecord\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","RecordService","UpdateRecord","params","history","idDoctor","localStorage","getItem","idP","idPatient","idR","idRecord","dateRecord","setDateRecord","updateRecord","event","preventDefault","record","console","log","JSON","stringify","checkFormValues","then","push","alert","changeDateHandler","target","value","cancel","window","onpopstate","marginLeft"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/UpdateRecord.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport RecordService from '../services/RecordService';\r\n\r\nconst UpdateRecord = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const idDoctor = localStorage.getItem('token');\r\n\r\n\r\n    // // Aqui se empiezan a definir las variables de estado\r\n    const [idP] = useState(params.idPatient);\r\n    const [idR] = useState(params.idRecord);\r\n    const [dateRecord, setDateRecord] = useState('');\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n    const updateRecord = (event) => {\r\n        event.preventDefault();\r\n        let record = { idRecord: idR, idPatient: idP, dateRecord: dateRecord };\r\n        console.log('record => ' + JSON.stringify(record));\r\n        checkFormValues(record);\r\n\r\n        RecordService.updateRecord(idR, record).then(() => {\r\n            history.push(`/list-records/${idDoctor}/${idP}`);\r\n        });\r\n    }\r\n\r\n    const checkFormValues = (record) => {\r\n        if(record.dateRecord === ''){\r\n            alert('La fecha no puede estar vacía');\r\n            history.push(`/update-record/${idP}/${idR}`);\r\n        }\r\n\r\n    }   \r\n\r\n    const changeDateHandler = (event) => {\r\n        setDateRecord(event.target.value);\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push(`/list-records/${idDoctor}/${idP}`);\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push(`/list-records/${idDoctor}/${idP}`);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Modificar Registro</h3>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => updateRecord(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label> Fecha: </label>\r\n                                    <input type=\"date\" placeholder=\"Fecha\" name=\"dateRecord\" className=\"form-control\" value={dateRecord} onChange={(event) => changeDateHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => cancel()} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateRecord;"],"mappings":"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"},"metadata":{},"sourceType":"module"}