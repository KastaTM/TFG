{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\create\\\\CreateMedicine.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MedicineService from '../../services/MedicineService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMedicine = () => {\n  _s();\n  const history = useHistory();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [medicineName, setMedicineName] = useState('');\n  const [medicineDescription, setMedicineDescription] = useState('');\n  const [medicinePicture, setMedicinePicture] = useState('');\n  const [medicineList, setMedicineList] = useState('');\n  let isWrong = false;\n\n  // Aqui se empiezan a definir las funciones del componente\n\n  // Guarda el medicamento\n  const saveMedicine = event => {\n    event.preventDefault();\n    let medicine = {\n      medicineName: medicineName,\n      medicineDescription: medicineDescription,\n      medicinePicture: medicinePicture\n    };\n    checkFormValues(medicine);\n    if (!isWrong) {\n      MedicineService.createMedicine(medicine).then(() => {\n        history.push({\n          pathname: '/list-medicines/',\n          search: 'true'\n        });\n      });\n    }\n  };\n\n  // Comprueba que los valores sean validos\n  const checkFormValues = medicine => {\n    if (medicineList.includes(medicine.medicineName)) {\n      alert('Esta medicina ya ha sido añadida');\n      isWrong = true;\n    } else if (medicine.medicineName === '') {\n      alert('El nombre del medicamento no puede estar vacío');\n      isWrong = true;\n    } else if (!isNaN(medicine.medicineName)) {\n      alert('El nombre del medicamento no puede ser un número');\n      isWrong = true;\n    } else if (medicine.medicineDescription === '') {\n      alert('La descripción del medicamento no puede estar vacío');\n      isWrong = true;\n    } else if (!isNaN(medicine.medicineDescription)) {\n      alert('La descripción del medicamento no puede ser un número');\n      isWrong = true;\n    } else if (medicine.medicinePicture === '') {\n      alert('La medicina debe tener una foto');\n      isWrong = true;\n    }\n  };\n\n  // Maneja el cambio del nombre del medicamento en el formulario\n  const changeNameHandler = event => {\n    setMedicineName(event.target.value);\n  };\n\n  // Maneja el cambio de la descripción del medicamento en el formulario\n  const changeDescriptionHandler = event => {\n    setMedicineDescription(event.target.value);\n  };\n\n  // Maneja el cambio de la imagen del medicamento en el formulario\n  const changeMedicinePictureHandler = event => {\n    setMedicinePicture(event.target.value);\n  };\n\n  // Maneja la cancelación del formulario\n  const cancelForm = () => cancel();\n  const cancel = () => {\n    history.push('/list-medicines/');\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push('/list-medicines/');\n    };\n    MedicineService.getMedicinesNames().then(res => {\n      setMedicineList(res.data);\n    });\n  }, [history]);\n\n  // Renderiza el formulario para añadir un medicamento\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"A\\xF1adir Medicamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => saveMedicine(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Nombre: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Nombre\",\n                  name: \"medicineName\",\n                  className: \"form-control\",\n                  value: medicineName,\n                  onChange: event => changeNameHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Descripci\\xF3n: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Descripci\\xF3n\",\n                  name: \"medicineDescription\",\n                  className: \"form-control\",\n                  value: medicineDescription,\n                  onChange: event => changeDescriptionHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Foto(link): \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Foto\",\n                  name: \"medicinePicture\",\n                  className: \"form-control\",\n                  value: medicinePicture,\n                  onChange: event => changeMedicinePictureHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: cancelForm,\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMedicine, \"EYQvUjebHIJCTtaY2Uc83siOREE=\", false, function () {\n  return [useHistory];\n});\n_c = CreateMedicine;\nexport default _c2 = /*#__PURE__*/React.memo(CreateMedicine);\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateMedicine\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","MedicineService","CreateMedicine","history","medicineName","setMedicineName","medicineDescription","setMedicineDescription","medicinePicture","setMedicinePicture","medicineList","setMedicineList","isWrong","saveMedicine","event","preventDefault","medicine","checkFormValues","createMedicine","then","push","pathname","search","includes","alert","isNaN","changeNameHandler","target","value","changeDescriptionHandler","changeMedicinePictureHandler","cancelForm","cancel","window","onpopstate","getMedicinesNames","res","data","marginLeft","memo"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/create/CreateMedicine.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MedicineService from '../../services/MedicineService';\r\n\r\nconst CreateMedicine = () => {\r\n    const history = useHistory();\r\n\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [medicineName, setMedicineName] = useState('');\r\n    const [medicineDescription, setMedicineDescription] = useState('');\r\n    const [medicinePicture, setMedicinePicture] = useState('');\r\n    const [medicineList, setMedicineList] = useState('');\r\n    let isWrong = false;\r\n\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n\r\n    // Guarda el medicamento\r\n    const saveMedicine = (event) => {\r\n        event.preventDefault();\r\n        let medicine = { medicineName: medicineName, medicineDescription: medicineDescription, medicinePicture: medicinePicture };\r\n        checkFormValues(medicine);\r\n\r\n        if (!isWrong) {\r\n            MedicineService.createMedicine(medicine).then(() => {\r\n                history.push({\r\n                    pathname: '/list-medicines/',\r\n                    search: 'true'\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Comprueba que los valores sean validos\r\n    const checkFormValues = (medicine) => {\r\n        if (medicineList.includes(medicine.medicineName)) {\r\n            alert('Esta medicina ya ha sido añadida');\r\n            isWrong = true;\r\n        }\r\n        else if (medicine.medicineName === '') {\r\n            alert('El nombre del medicamento no puede estar vacío');\r\n            isWrong = true;\r\n        }\r\n        else if (!isNaN(medicine.medicineName)) {\r\n            alert('El nombre del medicamento no puede ser un número');\r\n            isWrong = true;\r\n        }\r\n        else if (medicine.medicineDescription === '') {\r\n            alert('La descripción del medicamento no puede estar vacío');\r\n            isWrong = true;\r\n        }\r\n        else if (!isNaN(medicine.medicineDescription)) {\r\n            alert('La descripción del medicamento no puede ser un número');\r\n            isWrong = true;\r\n        }\r\n        else if (medicine.medicinePicture === '') {\r\n            alert('La medicina debe tener una foto');\r\n            isWrong = true;\r\n        }\r\n    }\r\n\r\n    // Maneja el cambio del nombre del medicamento en el formulario\r\n    const changeNameHandler = (event) => {\r\n        setMedicineName(event.target.value);\r\n    }\r\n\r\n    // Maneja el cambio de la descripción del medicamento en el formulario\r\n    const changeDescriptionHandler = (event) => {\r\n        setMedicineDescription(event.target.value);\r\n    }\r\n\r\n    // Maneja el cambio de la imagen del medicamento en el formulario\r\n    const changeMedicinePictureHandler = (event) => {\r\n        setMedicinePicture(event.target.value);\r\n    }\r\n\r\n    // Maneja la cancelación del formulario\r\n    const cancelForm = () => cancel()\r\n\r\n    const cancel = () => {\r\n        history.push('/list-medicines/');\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push('/list-medicines/');\r\n        }\r\n        MedicineService.getMedicinesNames().then((res) => {\r\n            setMedicineList(res.data);\r\n        });\r\n    }, [history]);\r\n\r\n    // Renderiza el formulario para añadir un medicamento\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Añadir Medicamento</h3>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => saveMedicine(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nombre: </label>\r\n                                    <input placeholder=\"Nombre\" name=\"medicineName\" className=\"form-control\" value={medicineName} onChange={(event) => changeNameHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Descripción: </label>\r\n                                    <input placeholder=\"Descripción\" name=\"medicineDescription\" className=\"form-control\" value={medicineDescription} onChange={(event) => changeDescriptionHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Foto(link): </label>\r\n                                    <input placeholder=\"Foto\" name=\"medicinePicture\" className=\"form-control\" value={medicinePicture} onChange={(event) => changeMedicinePictureHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={cancelForm} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(CreateMedicine);"],"mappings":"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"},"metadata":{},"sourceType":"module"}