{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\create\\\\CreateNotification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NotificationService from '../../services/NotificationService';\nimport PatientService from '../../services/PatientService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNofication = () => {\n  _s();\n  const history = useHistory();\n  const idDoctor = localStorage.getItem('token');\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idPatient, setIdPatient] = useState('');\n  const [patients, setPatients] = useState([]);\n  const [notificationDescription, setNotificationDescription] = useState('');\n  const [dateNotification, setDateNotification] = useState('');\n  let isWrong = false;\n\n  // Aqui se empiezan a definir las funciones del componente\n  const saveNotification = event => {\n    event.preventDefault();\n    let notification = {\n      idDoctor: idDoctor,\n      idPatient: idPatient,\n      dateNotification: dateNotification,\n      notificationDescription: notificationDescription\n    };\n    checkFormValues(notification);\n    if (!isWrong) {\n      NotificationService.createNotification(notification).then(() => {\n        history.push(`/list-notifications/${idDoctor}/id(increasing)`);\n      });\n    }\n  };\n  const checkFormValues = notification => {\n    //Comprueba que los valores sean validos\n    //Comprobar si el paciente está dentro de la base de datos\n    if (!patients.includes(+notification.idPatient)) {\n      alert('Este paciente no es de este doctor');\n      isWrong = true;\n    }\n    if (notification.idPatient === '') {\n      alert('El DNI no puede estar vacío');\n      isWrong = true;\n    } else if (isNaN(notification.idPatient)) {\n      alert('El DNI debe ser un número');\n      isWrong = true;\n    } else if (notification.dateNotification === '') {\n      alert('La fecha no puede estar vacía');\n      isWrong = true;\n    } else if (notification.notificationDescription === '') {\n      alert('La descripción no puede estar vacía');\n      isWrong = true;\n    } else if (!isNaN(notification.notificationDescription)) {\n      alert('La descripción no puede ser un número');\n      isWrong = true;\n    }\n  };\n  const changeIdPatientHandler = event => {\n    setIdPatient(event.target.value);\n  };\n  const changeDescriptionHandler = event => {\n    setNotificationDescription(event.target.value);\n  };\n  const changeDateHandler = event => {\n    setDateNotification(event.target.value);\n  };\n  const cancelForm = () => cancel();\n  const cancel = () => {\n    history.push(`/list-notifications/${idDoctor}/id(increasing)`);\n  };\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push(`/list-notifications/${idDoctor}/id(increasing)`);\n    };\n    PatientService.getIdPatientsOfDoctor(idDoctor).then(res => {\n      setPatients(res.data);\n    });\n  }, [history, idDoctor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"A\\xF1adir Notificaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => saveNotification(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Paciente: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Paciente\",\n                  name: \"idPatient\",\n                  className: \"form-control\",\n                  value: idPatient,\n                  onChange: event => changeIdPatientHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Fecha: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  placeholder: \"Fecha\",\n                  name: \"dateNotification\",\n                  className: \"form-control\",\n                  value: dateNotification,\n                  onChange: event => changeDateHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Descripci\\xF3n: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Descripci\\xF3n\",\n                  name: \"notificationDescription\",\n                  className: \"form-control\",\n                  value: notificationDescription,\n                  onChange: event => changeDescriptionHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: cancelForm,\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateNofication, \"u20MzQ0vzyW/ijbx5Kc4k2BZR9E=\", false, function () {\n  return [useHistory];\n});\n_c = CreateNofication;\nexport default _c2 = /*#__PURE__*/React.memo(CreateNofication);\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateNofication\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","NotificationService","PatientService","CreateNofication","history","idDoctor","localStorage","getItem","idPatient","setIdPatient","patients","setPatients","notificationDescription","setNotificationDescription","dateNotification","setDateNotification","isWrong","saveNotification","event","preventDefault","notification","checkFormValues","createNotification","then","push","includes","alert","isNaN","changeIdPatientHandler","target","value","changeDescriptionHandler","changeDateHandler","cancelForm","cancel","window","onpopstate","getIdPatientsOfDoctor","res","data","marginLeft","memo"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/create/CreateNotification.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NotificationService from '../../services/NotificationService';\r\nimport PatientService from '../../services/PatientService';\r\n\r\nconst CreateNofication = () => {\r\n    const history = useHistory();\r\n    const idDoctor = localStorage.getItem('token');\r\n\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idPatient, setIdPatient] = useState('');\r\n    const [patients, setPatients] = useState([])\r\n    const [notificationDescription, setNotificationDescription] = useState('');\r\n    const [dateNotification, setDateNotification] = useState('');\r\n    let isWrong = false;\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n    const saveNotification = (event) => {\r\n        event.preventDefault();\r\n        let notification = { idDoctor: idDoctor, idPatient: idPatient, dateNotification: dateNotification, notificationDescription: notificationDescription };\r\n        checkFormValues(notification);\r\n\r\n        if (!isWrong) {\r\n            NotificationService.createNotification(notification).then(() => {\r\n                history.push(`/list-notifications/${idDoctor}/id(increasing)`);\r\n            });\r\n        }\r\n    }\r\n\r\n    const checkFormValues = (notification) => { //Comprueba que los valores sean validos\r\n        //Comprobar si el paciente está dentro de la base de datos\r\n        if(!patients.includes(+notification.idPatient)){\r\n            alert('Este paciente no es de este doctor');\r\n            isWrong = true;\r\n        }\r\n        if (notification.idPatient === '') {\r\n            alert('El DNI no puede estar vacío');\r\n            isWrong = true;\r\n        }\r\n        else if (isNaN(notification.idPatient)) {\r\n            alert('El DNI debe ser un número');\r\n            isWrong = true;\r\n        }\r\n        else if (notification.dateNotification === '') {\r\n            alert('La fecha no puede estar vacía');\r\n            isWrong = true;\r\n        }\r\n        else if (notification.notificationDescription === '') {\r\n            alert('La descripción no puede estar vacía');\r\n            isWrong = true;\r\n        }\r\n        else if (!isNaN(notification.notificationDescription)) {\r\n            alert('La descripción no puede ser un número');\r\n            isWrong = true;\r\n        }\r\n    }\r\n\r\n    const changeIdPatientHandler = (event) => {\r\n        setIdPatient(event.target.value);\r\n    }\r\n\r\n    const changeDescriptionHandler = (event) => {\r\n        setNotificationDescription(event.target.value);\r\n    }\r\n\r\n    const changeDateHandler = (event) => {\r\n        setDateNotification(event.target.value);\r\n    }\r\n\r\n    const cancelForm = () => cancel()\r\n\r\n    const cancel = () => {\r\n        history.push(`/list-notifications/${idDoctor}/id(increasing)`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push(`/list-notifications/${idDoctor}/id(increasing)`);\r\n        }\r\n        PatientService.getIdPatientsOfDoctor(idDoctor).then((res) => {\r\n            setPatients(res.data);\r\n        });\r\n    }, [history, idDoctor]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Añadir Notificación</h3>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => saveNotification(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Paciente: </label>\r\n                                    <input placeholder=\"Paciente\" name=\"idPatient\" className=\"form-control\" value={idPatient} onChange={(event) => changeIdPatientHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label> Fecha: </label>\r\n                                    <input type=\"date\" placeholder=\"Fecha\" name=\"dateNotification\" className=\"form-control\" value={dateNotification} onChange={(event) => changeDateHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label> Descripción: </label>\r\n                                    <input placeholder=\"Descripción\" name=\"notificationDescription\" className=\"form-control\" value={notificationDescription} onChange={(event) => changeDescriptionHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={cancelForm} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(CreateNofication);"],"mappings":"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"},"metadata":{},"sourceType":"module"}