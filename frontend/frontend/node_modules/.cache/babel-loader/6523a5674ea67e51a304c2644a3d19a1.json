{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\ListSymptom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport SymptomService from '../services/SymptomService';\nimport BasicSnackBar from './BasicSnackBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSymptom = () => {\n  _s();\n  const history = useHistory();\n  const idDoctor = localStorage.getItem('token');\n  const location = useLocation();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [symptoms, setSymptoms] = useState([]);\n\n  // Aqui se empiezan a definir las funciones del componente\n  const deleteSymptom = idSymptom => {\n    SymptomService.deleteSymptom(idSymptom).then(() => {\n      const filteredSymptoms = symptoms.filter(symptom => symptom.id !== idSymptom);\n      setSymptoms(filteredSymptoms);\n    });\n    history.push('/list-symptoms/');\n  };\n  const viewSymptom = idSymptom => {\n    history.push(`/view-symptom/${idSymptom}`);\n  };\n  const addSymptom = () => {\n    history.push('/add-symptom/add');\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push(`/admin-view/${idDoctor}`);\n    };\n    console.log(localStorage.getItem('token'));\n    SymptomService.getSymptoms().then(res => {\n      setSymptoms(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Lista de S\\xEDntomas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => addSymptom(),\n        children: \" A\\xF1adir S\\xEDntomas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: symptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: symptom.symptomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                onClick: () => deleteSymptom(symptom.idSymptom),\n                className: \"btn btn-danger\",\n                children: \"Borrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                onClick: () => viewSymptom(symptom.idSymptom),\n                className: \"btn btn-info\",\n                children: \"Detalles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this)]\n          }, symptom.idSymptom, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ListSymptom, \"DY7SvYmvY/JqqRpktNjJpo3ZSUs=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = ListSymptom;\nexport default ListSymptom;\nvar _c;\n$RefreshReg$(_c, \"ListSymptom\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useLocation","SymptomService","BasicSnackBar","ListSymptom","history","idDoctor","localStorage","getItem","location","symptoms","setSymptoms","deleteSymptom","idSymptom","then","filteredSymptoms","filter","symptom","id","push","viewSymptom","addSymptom","window","onpopstate","console","log","getSymptoms","res","data","map","symptomName","marginLeft"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/ListSymptom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport SymptomService from '../services/SymptomService'\r\nimport BasicSnackBar from './BasicSnackBar';\r\n\r\nconst ListSymptom = () => {\r\n    const history = useHistory();\r\n    const idDoctor = localStorage.getItem('token');\r\n    const location = useLocation();\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [symptoms, setSymptoms] = useState([]);\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n    const deleteSymptom = (idSymptom) => {\r\n        SymptomService.deleteSymptom(idSymptom).then(() => {\r\n            const filteredSymptoms = symptoms.filter(symptom => symptom.id !== idSymptom);\r\n            setSymptoms(filteredSymptoms);\r\n        });\r\n        history.push('/list-symptoms/');\r\n    }\r\n\r\n    const viewSymptom = (idSymptom) => {\r\n        history.push(`/view-symptom/${idSymptom}`);\r\n    }\r\n\r\n    const addSymptom = () => {\r\n        history.push('/add-symptom/add');\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push(`/admin-view/${idDoctor}`);\r\n        }\r\n        console.log(localStorage.getItem('token'));\r\n        SymptomService.getSymptoms().then((res) => {\r\n            setSymptoms(res.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center\">Lista de Síntomas</h2>\r\n            <div className=\"row\">\r\n                <button className=\"btn btn-primary\" onClick={() => addSymptom()}> Añadir Síntomas</button>\r\n            </div>\r\n            <div className=\"row\">\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            symptoms.map(\r\n                                symptom =>\r\n                                    <tr key={symptom.idSymptom}>\r\n                                        <td>{symptom.symptomName}</td>\r\n                                        <td>\r\n                                            <button style={{ marginLeft: \"10px\" }} onClick={() => deleteSymptom(symptom.idSymptom)} className=\"btn btn-danger\">Borrar</button>\r\n                                            <button style={{ marginLeft: \"10px\" }} onClick={() => viewSymptom(symptom.idSymptom)} className=\"btn btn-info\">Detalles</button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ListSymptom;"],"mappings":"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"},"metadata":{},"sourceType":"module"}