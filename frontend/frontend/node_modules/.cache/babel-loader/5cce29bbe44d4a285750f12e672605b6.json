{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\ViewRecord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport RecordService from '../services/RecordService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewRecord = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idP] = useState(params.idPatient);\n  const [idR] = useState(params.idRecord);\n  const [record, setRecord] = useState({});\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    const idDoctor = localStorage.getItem('token');\n    window.onpopstate = () => {\n      history.push(`/list-records/${idDoctor}/${idP}`);\n    };\n    RecordService.getRecordById(idDoctor, idP, idR).then(res => {\n      setRecord(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \" Detalles del registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Fecha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", record.dateRecord]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewRecord, \"KtQrT/RvqqSVor56c3HqVDrjeRA=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = ViewRecord;\nexport default ViewRecord;\nvar _c;\n$RefreshReg$(_c, \"ViewRecord\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","RecordService","ViewRecord","params","history","idP","idPatient","idR","idRecord","record","setRecord","idDoctor","localStorage","getItem","window","onpopstate","push","getRecordById","then","res","data","dateRecord"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/ViewRecord.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport RecordService from '../services/RecordService'\r\n\r\nconst ViewRecord = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idP] = useState(params.idPatient);\r\n    const [idR] = useState(params.idRecord);\r\n    const [record, setRecord] = useState({})\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        const idDoctor = localStorage.getItem('token');\r\n        window.onpopstate = () => {\r\n            history.push(`/list-records/${idDoctor}/${idP}`);\r\n        }\r\n        RecordService.getRecordById(idDoctor, idP, idR).then((res) => {\r\n            setRecord(res.data);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <div className=\"card col-md-6 offset-md-3\">\r\n                <h3 className=\"text-center\"> Detalles del registro</h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <label> Fecha: </label>\r\n                        <div> {record.dateRecord}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewRecord;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAOC,aAAa,MAAM,2BAA2B;AAAA;AAErD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,OAAO,GAAGJ,UAAU,EAAE;;EAE5B;EACA,MAAM,CAACK,GAAG,CAAC,GAAGP,QAAQ,CAACK,MAAM,CAACG,SAAS,CAAC;EACxC,MAAM,CAACC,GAAG,CAAC,GAAGT,QAAQ,CAACK,MAAM,CAACK,QAAQ,CAAC;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMc,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC9CC,MAAM,CAACC,UAAU,GAAG,MAAM;MACtBX,OAAO,CAACY,IAAI,CAAE,iBAAgBL,QAAS,IAAGN,GAAI,EAAC,CAAC;IACpD,CAAC;IACDJ,aAAa,CAACgB,aAAa,CAACN,QAAQ,EAAEN,GAAG,EAAEE,GAAG,CAAC,CAACW,IAAI,CAAEC,GAAG,IAAK;MAC1DT,SAAS,CAACS,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACtC;QAAI,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eACvD;QAAK,SAAS,EAAC,WAAW;QAAA,uBACtB;UAAK,SAAS,EAAC,KAAK;UAAA,wBAChB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuB,eACvB;YAAA,gBAAOX,MAAM,CAACY,UAAU;UAAA;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA;MAC7B;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAlCKnB,UAAU;EAAA,QACGH,SAAS,EACRC,UAAU;AAAA;AAAA,KAFxBE,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}