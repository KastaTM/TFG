{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\create\\\\CreateRecord.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport RecordService from '../../services/RecordService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateRecord = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n  const idDoctor = localStorage.getItem('token');\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idP] = useState(params.idPatient);\n  const [dateRecord, setDateRecord] = useState('');\n\n  // Aqui se empiezan a definir las funciones del componente\n\n  // Guarda el registro\n  const saveRecord = event => {\n    event.preventDefault();\n    let record = {\n      dateRecord: dateRecord,\n      idPatient: idP\n    };\n    checkFormValues(record);\n    RecordService.createRecord(record).then(() => {\n      history.push({\n        pathname: `/list-records/${idDoctor}/${idP}`,\n        search: 'true'\n      });\n    });\n  };\n\n  // Comprueba que los valores sean validos\n  const checkFormValues = record => {\n    if (record.dateRecord === '') {\n      alert('La fecha no puede estar vacía');\n      history.push(`/add-record/add/${idP}`);\n    }\n  };\n  const changeDateHandler = event => {\n    setDateRecord(event.target.value);\n  };\n  const cancelForm = () => cancel();\n  const cancel = () => {\n    history.push(`/list-records/${idDoctor}/${idP}`);\n  };\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push(`/list-records/${idDoctor}/${idP}`);\n    };\n  }, [history, idDoctor, idP]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"A\\xF1adir Registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => saveRecord(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Fecha: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  placeholder: \"Fecha\",\n                  name: \"dateRecord\",\n                  className: \"form-control\",\n                  value: dateRecord,\n                  onChange: event => changeDateHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: cancelForm,\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateRecord, \"s/2jBFxvIcr0ePcZS7LJcqNPApc=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = CreateRecord;\nexport default _c2 = /*#__PURE__*/React.memo(CreateRecord);\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateRecord\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","RecordService","CreateRecord","params","history","idDoctor","localStorage","getItem","idP","idPatient","dateRecord","setDateRecord","saveRecord","event","preventDefault","record","checkFormValues","createRecord","then","push","pathname","search","alert","changeDateHandler","target","value","cancelForm","cancel","window","onpopstate","marginLeft","memo"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/create/CreateRecord.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport RecordService from '../../services/RecordService';\r\n\r\nconst CreateRecord = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const idDoctor = localStorage.getItem('token');\r\n\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idP] = useState(params.idPatient);\r\n    const [dateRecord, setDateRecord] = useState('');\r\n\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n\r\n    // Guarda el registro\r\n    const saveRecord = (event) => {\r\n        event.preventDefault();\r\n        let record = { dateRecord: dateRecord, idPatient: idP };\r\n        checkFormValues(record);\r\n        RecordService.createRecord(record).then(() => {\r\n            history.push({\r\n                pathname: `/list-records/${idDoctor}/${idP}`,\r\n                search: 'true'\r\n            });\r\n        });\r\n    }\r\n\r\n    // Comprueba que los valores sean validos\r\n    const checkFormValues = (record) => {\r\n        if (record.dateRecord === '') {\r\n            alert('La fecha no puede estar vacía');\r\n            history.push(`/add-record/add/${idP}`);\r\n        }\r\n\r\n    }\r\n\r\n    const changeDateHandler = (event) => {\r\n        setDateRecord(event.target.value);\r\n    }\r\n\r\n    const cancelForm = () => cancel()\r\n\r\n    const cancel = () => {\r\n        history.push(`/list-records/${idDoctor}/${idP}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push(`/list-records/${idDoctor}/${idP}`);\r\n        }\r\n    }, [history, idDoctor, idP]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Añadir Registro</h3>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => saveRecord(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label> Fecha: </label>\r\n                                    <input type=\"date\" placeholder=\"Fecha\" name=\"dateRecord\" className=\"form-control\" value={dateRecord} onChange={(event) => changeDateHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={cancelForm} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(CreateRecord);"],"mappings":"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"},"metadata":{},"sourceType":"module"}