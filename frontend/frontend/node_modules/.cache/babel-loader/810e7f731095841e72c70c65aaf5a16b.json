{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\AddSymptomR.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport SymptomService from '../services/SymptomService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSymptomR = () => {\n  _s();\n  const history = useHistory();\n  const params = useParams();\n  const idDoctor = localStorage.getItem('token');\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idPatient] = useState(params.idPatient);\n  const [idRecord] = useState(params.idRecord);\n  const [symptoms, setSymptoms] = useState([]);\n\n  // Aqui se empiezan a definir las funciones del componente\n  const addSymptomToRecord = (idSymptom, symptomName) => {\n    let recordSymptom = {\n      idSymptom: idSymptom,\n      idRecord: idRecord,\n      symptomName: symptomName\n    };\n    SymptomService.addSymptomToRecord(recordSymptom).then(() => {});\n    //window.location.reload();\n    history.push({\n      pathname: `/update-record/${idPatient}/${idRecord}`,\n      search: 'true'\n    });\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      //history.push(`/view-record/${idDoctor}/${idPatient}/${idRecord}`);\n      history.push(`/update-record/${idPatient}/${idRecord}`);\n    };\n    console.log(localStorage.getItem('token'));\n    SymptomService.getRestSymptomsRecord(idRecord).then(res => {\n      setSymptoms(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Lista de S\\xEDntomas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: symptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: symptom.symptomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginLeft: \"10px\"\n                },\n                onClick: () => addSymptomToRecord(symptom.idSymptom, symptom.symptomName),\n                className: \"btn btn-danger\",\n                children: \"A\\xF1adir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this)]\n          }, symptom.idSymptom, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSymptomR, \"xz7rrdzKhTWG7+/4SmEdgBferfw=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = AddSymptomR;\nexport default AddSymptomR;\nvar _c;\n$RefreshReg$(_c, \"AddSymptomR\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","SymptomService","AddSymptomR","history","params","idDoctor","localStorage","getItem","idPatient","idRecord","symptoms","setSymptoms","addSymptomToRecord","idSymptom","symptomName","recordSymptom","then","push","pathname","search","window","onpopstate","console","log","getRestSymptomsRecord","res","data","map","symptom","marginLeft"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/AddSymptomR.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport SymptomService from '../services/SymptomService'\r\n\r\nconst AddSymptomR = () => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const idDoctor = localStorage.getItem('token');\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idPatient] = useState(params.idPatient);\r\n    const [idRecord] = useState(params.idRecord);\r\n    const [symptoms, setSymptoms] = useState([]);\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n    const addSymptomToRecord = (idSymptom, symptomName) => {\r\n        let recordSymptom = { idSymptom: idSymptom, idRecord: idRecord, symptomName: symptomName };\r\n        SymptomService.addSymptomToRecord(recordSymptom).then(() => {\r\n        });\r\n        //window.location.reload();\r\n        history.push({\r\n            pathname:`/update-record/${idPatient}/${idRecord}`,\r\n            search:'true'\r\n        });\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            //history.push(`/view-record/${idDoctor}/${idPatient}/${idRecord}`);\r\n            history.push(`/update-record/${idPatient}/${idRecord}`);\r\n        }\r\n        console.log(localStorage.getItem('token'));\r\n        SymptomService.getRestSymptomsRecord(idRecord).then((res) => {\r\n            setSymptoms(res.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center\">Lista de Síntomas</h2>\r\n            <div className=\"row\">\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            symptoms.map(\r\n                                symptom =>\r\n                                    <tr key={symptom.idSymptom}>\r\n                                        <td>{symptom.symptomName}</td>\r\n                                        <td>\r\n                                            <button style={{ marginLeft: \"10px\" }} onClick={() => addSymptomToRecord(symptom.idSymptom, symptom.symptomName)} className=\"btn btn-danger\">Añadir</button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default AddSymptomR;"],"mappings":"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"},"metadata":{},"sourceType":"module"}