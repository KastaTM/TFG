{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\create\\\\CreateDisease.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport DiseaseService from '../../services/DiseaseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateDisease = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [id] = useState(params.id);\n  const [diseaseName, setDiseaseName] = useState('');\n  const [diseaseDescription, setDiseaseDescription] = useState('');\n  const [diseaseList, setDiseaseList] = useState('');\n  let isWrong = false;\n\n  // Aqui se empiezan a definir las funciones del componente\n\n  // Guarda la enfermedad\n  const saveOrUpdateDisease = event => {\n    event.preventDefault();\n    let disease = {\n      diseaseName: diseaseName,\n      diseaseDescription: diseaseDescription\n    };\n    checkFormValues(disease);\n    if (id === 'add' && !isWrong) {\n      DiseaseService.createDisease(disease).then(() => {\n        window.location.reload();\n        history.push({\n          pathname: '/list-diseases/',\n          search: 'true'\n        });\n      });\n    }\n  };\n\n  // Comprueba que los valores sean validos\n  const checkFormValues = disease => {\n    if (diseaseList.includes(disease.diseaseName)) {\n      alert('Esta enfermedad ya ha sido añadida');\n      isWrong = true;\n    } else if (disease.diseaseName === '') {\n      alert('El nombre de la enfermedad no puede estar vacío');\n      isWrong = true;\n    } else if (!isNaN(disease.diseaseName)) {\n      alert('El nombre de la enfermedad no puede ser un número');\n      isWrong = true;\n    } else if (disease.diseaseDescription === '') {\n      alert('La descripcion de la enfermedad no puede estar vacío');\n      isWrong = true;\n    } else if (!isNaN(disease.diseaseDescription)) {\n      alert('La descripción de la enfermedad no puede ser un número');\n      isWrong = true;\n    }\n  };\n\n  // Maneja el cambio del nombre de la enfermedad en el formulario\n  const changeNameHandler = event => {\n    setDiseaseName(event.target.value);\n  };\n\n  // Maneja el cambio de la descripción de la enfermedad en el formulario\n  const changeDescriptionHandler = event => {\n    setDiseaseDescription(event.target.value);\n  };\n\n  // Maneja la cancelación del formulario\n  const cancelForm = () => cancel();\n  const cancel = () => {\n    history.push('/list-diseases/');\n  };\n\n  // Esta función renderiza el titulo del formulario\n  const getTitle = () => {\n    if (id === 'add') {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"A\\xF1adir Enfermedad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Modificar Enfermedad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push('/list-diseases/');\n    };\n    DiseaseService.getDiseasesNames().then(res => {\n      setDiseaseList(res.data);\n    });\n  }, [history]);\n\n  // Renderiza el formulario para añadir una enfermedad\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [getTitle(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => saveOrUpdateDisease(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Nombre: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Nombre\",\n                  name: \"diseaseName\",\n                  className: \"form-control\",\n                  value: diseaseName,\n                  onChange: event => changeNameHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Descripci\\xF3n: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Descripci\\xF3n\",\n                  name: \"diseaseDescription\",\n                  className: \"form-control\",\n                  value: diseaseDescription,\n                  onChange: event => changeDescriptionHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                variant: \"contained\",\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: cancelForm,\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateDisease, \"cX8aPZpM/j6WZc3d2rCejWTbZiY=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = CreateDisease;\nexport default _c2 = /*#__PURE__*/React.memo(CreateDisease);\nvar _c, _c2;\n$RefreshReg$(_c, \"CreateDisease\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","DiseaseService","CreateDisease","params","history","id","diseaseName","setDiseaseName","diseaseDescription","setDiseaseDescription","diseaseList","setDiseaseList","isWrong","saveOrUpdateDisease","event","preventDefault","disease","checkFormValues","createDisease","then","window","location","reload","push","pathname","search","includes","alert","isNaN","changeNameHandler","target","value","changeDescriptionHandler","cancelForm","cancel","getTitle","onpopstate","getDiseasesNames","res","data","marginLeft","memo"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/create/CreateDisease.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport DiseaseService from '../../services/DiseaseService';\r\n\r\nconst CreateDisease = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [id] = useState(params.id);\r\n    const [diseaseName, setDiseaseName] = useState('');\r\n    const [diseaseDescription, setDiseaseDescription] = useState('');\r\n    const [diseaseList, setDiseaseList] = useState('');\r\n    let isWrong = false;\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n\r\n    // Guarda la enfermedad\r\n    const saveOrUpdateDisease = (event) => {\r\n        event.preventDefault();\r\n        let disease = { diseaseName: diseaseName, diseaseDescription: diseaseDescription };\r\n        checkFormValues(disease);\r\n\r\n        if (id === 'add' && !isWrong) {\r\n            DiseaseService.createDisease(disease).then(() => {\r\n                window.location.reload();\r\n                history.push({\r\n                    pathname: '/list-diseases/',\r\n                    search: 'true'\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Comprueba que los valores sean validos\r\n    const checkFormValues = (disease) => {\r\n        if(diseaseList.includes(disease.diseaseName)){\r\n            alert('Esta enfermedad ya ha sido añadida');\r\n            isWrong = true;\r\n        }\r\n        else if (disease.diseaseName === '') {\r\n            alert('El nombre de la enfermedad no puede estar vacío');\r\n            isWrong = true;\r\n        }\r\n        else if (!isNaN(disease.diseaseName)) {\r\n            alert('El nombre de la enfermedad no puede ser un número');\r\n            isWrong = true;\r\n        }\r\n        else if (disease.diseaseDescription === '') {\r\n            alert('La descripcion de la enfermedad no puede estar vacío');\r\n            isWrong = true;\r\n        }\r\n        else if (!isNaN(disease.diseaseDescription)) {\r\n            alert('La descripción de la enfermedad no puede ser un número');\r\n            isWrong = true;\r\n        }\r\n    }\r\n\r\n    // Maneja el cambio del nombre de la enfermedad en el formulario\r\n    const changeNameHandler = (event) => {\r\n        setDiseaseName(event.target.value);\r\n    }\r\n\r\n    // Maneja el cambio de la descripción de la enfermedad en el formulario\r\n    const changeDescriptionHandler = (event) => {\r\n        setDiseaseDescription(event.target.value);\r\n    }\r\n\r\n    // Maneja la cancelación del formulario\r\n    const cancelForm = () => cancel()\r\n\r\n    const cancel = () => {\r\n        history.push('/list-diseases/');\r\n    }\r\n\r\n    // Esta función renderiza el titulo del formulario\r\n    const getTitle = () => {\r\n        if (id === 'add') {\r\n            return <h3 className=\"text-center\">Añadir Enfermedad</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Modificar Enfermedad</h3>\r\n        }\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push('/list-diseases/');\r\n        }\r\n        DiseaseService.getDiseasesNames().then((res) => {\r\n            setDiseaseList(res.data);\r\n        });\r\n    }, [history]);\r\n\r\n    // Renderiza el formulario para añadir una enfermedad\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            getTitle()\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => saveOrUpdateDisease(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nombre: </label>\r\n                                    <input placeholder=\"Nombre\" name=\"diseaseName\" className=\"form-control\" value={diseaseName} onChange={(event) => changeNameHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Descripción: </label>\r\n                                    <input placeholder=\"Descripción\" name=\"diseaseDescription\" className=\"form-control\" value={diseaseDescription} onChange={(event) => changeDescriptionHandler(event)} />\r\n                                </div>\r\n                                <button variant=\"contained\" type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={cancelForm} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(CreateDisease);"],"mappings":"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"},"metadata":{},"sourceType":"module"}