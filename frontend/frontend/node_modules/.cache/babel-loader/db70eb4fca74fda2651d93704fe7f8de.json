{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\ViewMedicine.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MedicineService from '../services/MedicineService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewMedicine = () => {\n  _s();\n  const history = useHistory();\n  const params = useParams();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idM] = useState(params.id);\n  const [medicine, setMedicine] = useState({});\n  const [symptoms, setSymptoms] = useState([]);\n  const addSymptomToMedicine = () => {\n    history.push(`/add-symptom-to-medicine/${idM}`);\n  };\n  const deleteSymptom = idDS => {\n    MedicineService.deleteSymptom(idDS).then(() => {\n      const filteredSymptoms = symptoms.filter(symptom => symptom.id !== idDS);\n      setPatients(filteredSymptoms);\n    });\n    //history.push(`/list-patients/${idDoctor}`);\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push('/list-medicines/');\n    };\n    MedicineService.getMedicineById(idM).then(res => {\n      setMedicine(res.data);\n    });\n    //Busco los sintomas de la enfermedad con idD\n    MedicineService.getSymptomsOfMedicine(idM).then(res => {\n      setSymptoms(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \" Detalles del medicamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Nombre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", medicine.medicineName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Descripci\\xF3n: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", medicine.medicineDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sintomas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: symptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: symptom.symptomName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  onClick: () => deleteSymptom(symptom.idDS),\n                  className: \"btn btn-danger\",\n                  children: \"Borrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 49\n                }, this)]\n              }, symptom.idDS, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => addSymptomToMedicine(),\n        children: \" A\\xF1adir s\\xEDntomas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewMedicine, \"X7eZ89Flu/yAvF1KhGK6VDepE08=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = ViewMedicine;\nexport default ViewMedicine;\nvar _c;\n$RefreshReg$(_c, \"ViewMedicine\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","MedicineService","ViewMedicine","history","params","idM","id","medicine","setMedicine","symptoms","setSymptoms","addSymptomToMedicine","push","deleteSymptom","idDS","then","filteredSymptoms","filter","symptom","setPatients","window","onpopstate","getMedicineById","res","data","getSymptomsOfMedicine","medicineName","medicineDescription","map","symptomName","marginLeft"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/ViewMedicine.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport MedicineService from '../services/MedicineService'\r\n\r\nconst ViewMedicine = () => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idM] = useState(params.id);\r\n    const [medicine, setMedicine] = useState({})\r\n    const [symptoms, setSymptoms] = useState([])\r\n\r\n    const addSymptomToMedicine = () => {\r\n        history.push(`/add-symptom-to-medicine/${idM}`);\r\n    }\r\n\r\n    const deleteSymptom = (idDS) => {\r\n        MedicineService.deleteSymptom(idDS).then(() => {\r\n            const filteredSymptoms = symptoms.filter(symptom => symptom.id !== idDS);\r\n            setPatients(filteredSymptoms);\r\n        });\r\n        //history.push(`/list-patients/${idDoctor}`);\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push('/list-medicines/');\r\n        }\r\n        MedicineService.getMedicineById(idM).then((res) => {\r\n            setMedicine(res.data);\r\n        });\r\n        //Busco los sintomas de la enfermedad con idD\r\n        MedicineService.getSymptomsOfMedicine(idM).then((res) => {\r\n            setSymptoms(res.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <div className=\"card col-md-6 offset-md-3\">\r\n                <h3 className=\"text-center\"> Detalles del medicamento</h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <label> Nombre: </label>\r\n                        <div> {medicine.medicineName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label> Descripci√≥n: </label>\r\n                        <div> {medicine.medicineDescription}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sintomas</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    symptoms.map(\r\n                                        symptom =>\r\n                                            <tr key={symptom.idDS}>\r\n                                                <td>{symptom.symptomName}</td>\r\n                                                <button style={{ marginLeft: \"10px\" }} onClick={() => deleteSymptom(symptom.idDS)} className=\"btn btn-danger\">Borrar</button>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={() => addSymptomToMedicine()}> A√±adir s√≠ntomas</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMedicine;"],"mappings":"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"},"metadata":{},"sourceType":"module"}