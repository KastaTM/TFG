{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\views\\\\ViewDisease.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport DiseaseService from '../../services/DiseaseService';\nimport BasicSnackBar from '../common/BasicSnackBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewDisease = () => {\n  _s();\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [idD] = useState(params.id);\n  const [disease, setDisease] = useState({});\n  const [symptoms, setSymptoms] = useState([]);\n  const [open, setOpen] = useState(false);\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push('/list-diseases/');\n    };\n    DiseaseService.getDiseaseById(idD).then(res => {\n      setDisease(res.data);\n    });\n    //Busco los sintomas de la enfermedad con idD\n    DiseaseService.getSymptomsOfDisease(idD).then(res => {\n      setSymptoms(res.data);\n    });\n    if (location.search === '?true') {\n      handleClick();\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \" Detalles de la enfermedad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Nombre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", disease.diseaseName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Descripci\\xF3n: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", disease.diseaseDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sintomas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: symptoms.map(symptom => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: symptom.symptomName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 49\n                }, this)\n              }, symptom.idDS, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BasicSnackBar, {\n        open: open,\n        onClose: handleClose,\n        severity: \"success\",\n        message: \"S\\xEDntoma a\\xF1adido correctamente a la enfermedad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewDisease, \"e+2Yz2qLpVAWYfDHE8axQaznEkM=\", false, function () {\n  return [useHistory, useParams, useLocation];\n});\n_c = ViewDisease;\nexport default ViewDisease;\nvar _c;\n$RefreshReg$(_c, \"ViewDisease\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","useLocation","DiseaseService","BasicSnackBar","ViewDisease","history","params","location","idD","id","disease","setDisease","symptoms","setSymptoms","open","setOpen","handleClick","handleClose","event","reason","window","onpopstate","push","getDiseaseById","then","res","data","getSymptomsOfDisease","search","diseaseName","diseaseDescription","map","symptom","symptomName","idDS"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/views/ViewDisease.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\r\nimport DiseaseService from '../../services/DiseaseService'\r\nimport BasicSnackBar from '../common/BasicSnackBar'\r\n\r\nconst ViewDisease = () => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const location = useLocation();\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [idD] = useState(params.id);\r\n    const [disease, setDisease] = useState({})\r\n    const [symptoms, setSymptoms] = useState([])\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push('/list-diseases/');\r\n        }\r\n        DiseaseService.getDiseaseById(idD).then((res) => {\r\n            setDisease(res.data);\r\n        });\r\n        //Busco los sintomas de la enfermedad con idD\r\n        DiseaseService.getSymptomsOfDisease(idD).then((res) => {\r\n            setSymptoms(res.data);\r\n        });\r\n        if(location.search === '?true'){\r\n            handleClick();\r\n        }\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <div className=\"card col-md-6 offset-md-3\">\r\n                <h3 className=\"text-center\"> Detalles de la enfermedad</h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <label> Nombre: </label>\r\n                        <div> {disease.diseaseName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label> Descripci√≥n: </label>\r\n                        <div> {disease.diseaseDescription}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sintomas</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    symptoms.map(\r\n                                        symptom =>\r\n                                            <tr key={symptom.idDS}>\r\n                                                <td>{symptom.symptomName}</td>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <BasicSnackBar \r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    severity=\"success\"\r\n                    message=\"S√≠ntoma a√±adido correctamente a la enfermedad\"\r\n                />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewDisease;"],"mappings":"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"},"metadata":{},"sourceType":"module"}