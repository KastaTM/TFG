{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\Uni 22-23\\\\Trabajo De Fin De Grado\\\\tfgReact\\\\frontend\\\\src\\\\components\\\\create\\\\CreateMedicine.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MedicineService from '../services/MedicineService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMedicine = () => {\n  _s();\n  const params = useParams();\n  const history = useHistory();\n\n  // Aqui se empiezan a definir las variables de estado\n  const [id] = useState(params.id);\n  const [medicineName, setMedicineName] = useState('');\n  const [medicineDescription, setMedicineDescription] = useState('');\n\n  // Aqui se empiezan a definir las funciones del componente\n  const saveOrUpdateMedicine = event => {\n    event.preventDefault();\n    let medicine = {\n      medicineName: medicineName,\n      medicineDescription: medicineDescription\n    };\n    console.log('medicine => ' + JSON.stringify(medicine));\n    checkFormValues(medicine);\n    if (id === 'add') {\n      MedicineService.createMedicine(medicine).then(() => {\n        history.push({\n          pathname: '/list-medicines/',\n          search: 'true'\n        });\n      });\n    }\n  };\n  const checkFormValues = medicine => {\n    if (medicine.medicineName === '') {\n      alert('El nombre del medicamento no puede estar vacío');\n      history.push('/add-medicine/add');\n    } else if (!isNaN(medicine.medicineName)) {\n      alert('El nombre del medicamento no puede ser un número');\n      history.push('/add-medicine/add');\n    } else if (medicine.medicineDescription === '') {\n      alert('La descripción del medicamento no puede estar vacío');\n      history.push('/add-medicine/add');\n    } else if (!isNaN(medicine.medicineDescription)) {\n      alert('La descripción del medicamento no puede ser un número');\n      history.push('/add-medicine/add');\n    }\n  };\n  const changeNameHandler = event => {\n    setMedicineName(event.target.value);\n  };\n  const changeDescriptionHandler = event => {\n    setMedicineDescription(event.target.value);\n  };\n  const cancel = () => {\n    history.push('/list-medicines/');\n  };\n\n  // Aqui empieza los useEffect\n  useEffect(() => {\n    window.onpopstate = () => {\n      history.push('/list-medicines/');\n    };\n  }, []);\n  const getTitle = () => {\n    if (id === 'add') {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"A\\xF1adir Medicamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Modificar Medicamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [getTitle(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => saveOrUpdateMedicine(event),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Nombre: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Nombre\",\n                  name: \"medicineName\",\n                  className: \"form-control\",\n                  value: medicineName,\n                  onChange: event => changeNameHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Descripci\\xF3n: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Descripci\\xF3n\",\n                  name: \"medicineDescription\",\n                  className: \"form-control\",\n                  value: medicineDescription,\n                  onChange: event => changeDescriptionHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success\",\n                children: \"Guardar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: () => cancel(),\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMedicine, \"pm+3IegFoQoplTNFmFD0rNP0Oaw=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = CreateMedicine;\nexport default CreateMedicine;\nvar _c;\n$RefreshReg$(_c, \"CreateMedicine\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","MedicineService","CreateMedicine","params","history","id","medicineName","setMedicineName","medicineDescription","setMedicineDescription","saveOrUpdateMedicine","event","preventDefault","medicine","console","log","JSON","stringify","checkFormValues","createMedicine","then","push","pathname","search","alert","isNaN","changeNameHandler","target","value","changeDescriptionHandler","cancel","window","onpopstate","getTitle","marginLeft"],"sources":["C:/Users/Rodrigo/Desktop/Uni 22-23/Trabajo De Fin De Grado/tfgReact/frontend/src/components/create/CreateMedicine.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport MedicineService from '../services/MedicineService';\r\n\r\nconst CreateMedicine = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    // Aqui se empiezan a definir las variables de estado\r\n    const [id] = useState(params.id);\r\n    const [medicineName, setMedicineName] = useState('');\r\n    const [medicineDescription, setMedicineDescription] = useState('');\r\n\r\n\r\n    // Aqui se empiezan a definir las funciones del componente\r\n    const saveOrUpdateMedicine = (event) => {\r\n        event.preventDefault();\r\n        let medicine = { medicineName: medicineName, medicineDescription: medicineDescription };\r\n        console.log('medicine => ' + JSON.stringify(medicine));\r\n        checkFormValues(medicine);\r\n\r\n        if (id === 'add') {\r\n            MedicineService.createMedicine(medicine).then(() => {\r\n                history.push({\r\n                    pathname:'/list-medicines/',\r\n                    search:'true'});\r\n            });\r\n        } \r\n    }\r\n\r\n    const checkFormValues = (medicine) => {\r\n        if(medicine.medicineName === ''){\r\n            alert('El nombre del medicamento no puede estar vacío');\r\n            history.push('/add-medicine/add');\r\n        }\r\n        else if(!isNaN(medicine.medicineName)){\r\n            alert('El nombre del medicamento no puede ser un número');\r\n            history.push('/add-medicine/add');\r\n        }\r\n        else if(medicine.medicineDescription === ''){\r\n            alert('La descripción del medicamento no puede estar vacío');\r\n            history.push('/add-medicine/add');\r\n        }\r\n        else if(!isNaN(medicine.medicineDescription)){\r\n            alert('La descripción del medicamento no puede ser un número');\r\n            history.push('/add-medicine/add');\r\n        }\r\n    }\r\n\r\n    const changeNameHandler = (event) => {\r\n        setMedicineName(event.target.value);\r\n    }\r\n    \r\n    const changeDescriptionHandler = (event) => {\r\n        setMedicineDescription(event.target.value);\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/list-medicines/');\r\n    }\r\n\r\n    // Aqui empieza los useEffect\r\n    useEffect(() => {\r\n        window.onpopstate = () => {\r\n            history.push('/list-medicines/');\r\n        }\r\n        }, []);\r\n\r\n    const getTitle = () => {\r\n        if (id === 'add') {\r\n            return <h3 className=\"text-center\">Añadir Medicamento</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Modificar Medicamento</h3>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            getTitle()\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={(event) => saveOrUpdateMedicine(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nombre: </label>\r\n                                    <input placeholder=\"Nombre\" name=\"medicineName\" className=\"form-control\" value={medicineName} onChange={(event) => changeNameHandler(event)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Descripción: </label>\r\n                                    <input placeholder=\"Descripción\" name=\"medicineDescription\" className=\"form-control\" value={medicineDescription} onChange={(event) => changeDescriptionHandler(event)} />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => cancel()} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateMedicine;"],"mappings":"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"},"metadata":{},"sourceType":"module"}